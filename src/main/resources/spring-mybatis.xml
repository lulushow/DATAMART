<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.unicom.mybatis" />
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:jdbc.properties" />
	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialPoolSize" value="3" />
		<!--c3p0连接池的私有属性 -->
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="2" />
		<!--关闭连接后不自动commit -->
		<property name="autoCommitOnClose" value="false" />
		<!--获取连接超时时间 -->
		<property name="checkoutTimeout" value="1000" />
		<!--当获取连接失败重试次数 -->
		<property name="acquireRetryAttempts" value="2" />
		<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 
			0 -->
		<!-- <property name=maxStatements value="${jdbc.maxStatements}"></property> -->
		<!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->

		<!-- <property name="maxStatementsPerConnection" value="${jdbc.maxStatements}></property> -->
	</bean>

	<!-- <context:property-placeholder location="classpath:jdbc.properties"/> -->

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 加载mybatis的配置文件 -->
		<!-- <property name="configLocation" value="classpath:/conf/mybatis/mybatisConfig.xml"/> -->
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:/com/unicom/mybatis/mapping/*.xml"></property>
	</bean>

	<!-- <bean id="UserService" class="com.unicom.mybatis.impl"> <property name="sessionFactory 
		"ref="sessionFactory"></property> </bean> -->
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.unicom.mybatis.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 通知 配置传播行为 -->
	<!-- <tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> <tx:method name="save*" propagation="REQUIRED"/> <tx:method 
		name="delete*" propagation="REQUIRED"/> <tx:method name="add*" propagation="REQUIRED"/> 
		<tx:method name="update*" propagation="REQUIRED"/> <tx:method name="get*" 
		propagation="SUPPORTS" read-only="true"/> <tx:method name="select*" propagation="SUPPORTS" 
		read-only="true"/> <tx:method name="count*" read-only="true"/> 对其他方法 使用默认的事务管理 
		<tx:method name="*"/> </tx:attributes> </tx:advice> -->

	<!-- aop配置 -->
	<!-- <aop:config> pointcut:执行service下impl下的所有类的所有方法不管什么参数 <aop:advisor advice-ref="txAdvice" 
		pointcut="execution(* cn.youye.mvc.service.*.*(..))"/> </aop:config> -->

	<!-- 采用CGLIB代理 -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true"/> -->

</beans>  
